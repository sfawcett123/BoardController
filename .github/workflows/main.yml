name: Test
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  prep:
    name: Prepare 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: 7.0.x
    
      - name: Install dotnet-sonarscanner
        run:  dotnet tool install --global dotnet-sonarscanner
 

        
  build:
    name: Build 
    runs-on: ubuntu-latest
    needs: [ prep ]
    steps:
    
    - name: Restore
      run:  dotnet restore
       
    - name: Build
      run:  dotnet build --no-incremental --configuration Release --nologo
      
  test:
    name: Test 
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Test
        run:  |
                dotnet sonarscanner begin /k:"sfawcett123_BoardController" \
                                          /o:"sfawcett123" \
                                          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
                                          /d:sonar.host.url="https://sonarcloud.io" \
                                          /d:sonar.cs.vstest.reportsPaths="BoardManagerTest/TestResults/*.trx"
                dotnet build --no-incremental --configuration Release --nologo
                dotnet test --no-build --logger:trx  --configuration Release -e:CollectCoverage=true -e:CoverletOutputFormat=opencover
                dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
           trx_files: "BoardManagerTest/TestResults/*.trx"

  publish:
    name: Publish 
    runs-on: ubuntu-latest
    needs: [ test ]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Publish
        run: dotnet nuget push **/*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --configuration Release
